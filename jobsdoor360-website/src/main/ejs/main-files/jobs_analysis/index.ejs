<!DOCTYPE html>
<html>
  <head>
    <title>
      Affordable and Flexible Pricing Plans for Your Learning Journey
    </title>
    <meta
      name="description"
      content="Explore our Courses: Web Development, Backend Development, and Full Stack Development. Mock Interviews and Career Consultancy Services. Affordable Pricing and Expert Guidance. Contact us on WhatsApp to Buy Now!"
    />
    <link rel="stylesheet" href="../../../../../../staticfiles/style.css" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"
      crossorigin="anonymous"
    />
    <script>
      function trackBuyButtonClick(buttonName) {
        gtag("event", "click", {
          event_category: "Buy Now Click",
          event_label: buttonName,
        });
      }
    </script>
    <%- include('../../partials/head.ejs') %>
  </head>

  <body>
    <!-- End Google Tag Manager (noscript) -->
    <!-- Navbar -->

    <%- include('../../partials/navbar.ejs') %>
    <!-- main body start -->
    <table class="table table-striped" id="profileTable">
      <h1 class="text-center m-2 p-2">Total No. of Jobs for each Profile</h1>
      <thead>
        <tr>
          <th scope="col">S.NO.</th>
          <th scope="col">Jobs Profile</th>
          <th scope="col" class="text-center">2018</th>
          <th scope="col" class="text-center">2019</th>
          <th scope="col" class="text-center">2020</th>
          <th scope="col" class="text-center">2021</th>
          <th scope="col" class="text-center">2022</th>
          <th scope="col" class="text-center">2023</th>
          <th scope="col" class="text-center">2024</th>
          <th scope="col" class="text-center">Total Jobs</th>
        </tr>
      </thead>
      <tbody>
        <!-- Table body will be populated dynamically -->
      </tbody>
    </table>
    <table class="table table-striped" id="postTable">
      <h1 class="text-center m-2 p-2">Total No. of Jobs for each Post</h1>
      <thead>
        <tr>
          <th scope="col">S.NO.</th>
          <th scope="col">Job Post</th>
          <th scope="col" class="text-center">2018</th>
          <th scope="col" class="text-center">2019</th>
          <th scope="col" class="text-center">2020</th>
          <th scope="col" class="text-center">2021</th>
          <th scope="col" class="text-center">2022</th>
          <th scope="col" class="text-center">2023</th>
          <th scope="col" class="text-center">2024</th>
          <th scope="col" class="text-center">Total Jobs</th>
        </tr>
      </thead>
      <tbody>
        <!-- Table body will be populated dynamically -->
      </tbody>
    </table>
    <script src="../../../../../../website_data/jobs_data.js"></script>
    <script>
      //Logic to filter out unique job profiles and count their occurrences
      const uniqueJobPosts = jobs_data.reduce((acc, curr) => {
        if (!curr.posts_data || !curr.job_code || !curr.post_date) {
          // If posts_data doesn't exist, treat it as unknown
          let existingJob = acc.find((job) => job.profile_code === "unknown");
          if (existingJob) {
            existingJob.count++;
          } else {
            acc.push({
              job_code: "unknown",
              profile_name: "Unknown",
              profile_code: "unknown",
              post_years: {},
              count: 1,
            });
          }
          return acc;
        }

        let postYear = curr.post_date.split("-")[0].slice(-2);
        postYear = postYear.length === 2 ? "20" + postYear : postYear;

        let year =
          curr.post_date.length === 8
            ? curr.post_date.slice(-2)
            : curr.post_date.substring(0, 4);
        year = year.length === 2 ? "20" + year : year;

        let existingJob = acc.find(
          (job) => job.profile_code === curr.posts_data.post_code
        );
        if (existingJob) {
          existingJob.count++;
          existingJob.post_years[year] =
            (existingJob.post_years[year] || 0) + 1;
        } else {
          let postYears = {};
          postYears[year] = 1;
          acc.push({
            job_code: curr.job_code,
            profile_name: curr.posts_data.post_name,
            profile_code: curr.posts_data.post_code,
            post_years: postYears,
            count: 1,
          });
        }

        return acc;
      }, []);

      //Logic to populate the table with unique job profiles and their occurrences
      function populateTable() {
        var tbody = document.querySelector("#postTable tbody");
        tbody.innerHTML = ""; // Clear existing rows

        uniqueJobPosts.forEach(function (job, index) {
          var row =
            "<tr>" +
            "<th scope='row'>" +
            (index + 1) +
            "</th>" +
            "<td>" +
            job.profile_name +
            "</td>";

          // Loop through years from 2018 to 2024 to create columns for each year
          for (let year = 2018; year <= 2024; year++) {
            row +=
              "<td class='text-center'>" +
              (job.post_years[year] || 0) +
              "</td>";
          }

          row += "<td class='text-center'>" + job.count + "</td>" + "</tr>";
          tbody.innerHTML += row;
        });
      }
      populateTable();
    </script>
    <script>
      //Logic to filter out unique job profiles and count their occurrences
      const uniqueJobProfiles = jobs_data.reduce((acc, curr) => {
        if (!curr.posts_data || !curr.job_code || !curr.post_date) return acc;

        let postYear = curr.post_date.split("-")[0].slice(-2);
        postYear = postYear.length === 2 ? "20" + postYear : postYear;

        let year =
          curr.post_date.length === 8
            ? curr.post_date.slice(-2)
            : curr.post_date.substring(0, 4);
        year = year.length === 2 ? "20" + year : year;

        if (!curr.posts_data.profile_masterdata) {
          // Increment counter for unknown profiles
          let unknownProfile = acc.find(
            (job) => job.profile_code === "UNKNOWN"
          );
          if (unknownProfile) {
            unknownProfile.count++;
            unknownProfile.post_years[year] =
              (unknownProfile.post_years[year] || 0) + 1;
          } else {
            let postYears = {};
            postYears[year] = 1;
            acc.push({
              job_code: curr.job_code,
              profile_name: "Unknown",
              profile_code: "UNKNOWN",
              post_years: postYears,
              count: 1,
            });
          }
          return acc;
        }

        let existingJob = acc.find(
          (job) => job.profile_code === curr.posts_data.profile_masterdata.code
        );
        if (existingJob) {
          existingJob.count++;
          existingJob.post_years[year] =
            (existingJob.post_years[year] || 0) + 1;
        } else {
          let postYears = {};
          postYears[year] = 1;
          acc.push({
            job_code: curr.job_code,
            profile_name: curr.posts_data.profile_masterdata.name,
            profile_code: curr.posts_data.profile_masterdata.code,
            post_years: postYears,
            count: 1,
          });
        }

        return acc;
      }, []);

      //Logic to populate the table with unique job profiles and their occurrences
      function populateTable() {
        var tbody = document.querySelector("#profileTable tbody");
        tbody.innerHTML = ""; // Clear existing rows

        uniqueJobProfiles.forEach(function (job, index) {
          var row =
            "<tr>" +
            "<th scope='row'>" +
            (index + 1) +
            "</th>" +
            "<td>" +
            job.profile_name +
            "</td>";

          // Loop through years from 2018 to 2024 to create columns for each year
          for (let year = 2018; year <= 2024; year++) {
            row +=
              "<td class='text-center'>" +
              (job.post_years[year] || 0) +
              "</td>";
          }

          row += "<td class='text-center'>" + job.count + "</td>" + "</tr>";
          tbody.innerHTML += row;
        });
      }
      populateTable();
    </script>

    <!-- main body end -->

    <!-- Footer -->

    <%- include('../../partials/footer.ejs') %>

    <!-- WhatsApp Chat Button -->
    <div class="chat-back-to-top">
      <!-- <button id="like-button">
        <i class="fa-solid fa-thumbs-up"></i>
      </button>
      <button id="dislike-button">
        <i class="fa-solid fa-thumbs-down"></i>
      </button> -->
      <div class="whatsapp-chat">
        <a
          href="https://api.whatsapp.com/send?phone=918319349660&text=I want to know more!"
          target="_blank"
        >
          <i class="fab fa-whatsapp"></i>
        </a>
      </div>
      <button id="backToTopBtn" class="back-to-top-btn" onclick="scrollToTop()">
        <i class="fa-solid fa-chevron-up"></i>
      </button>
    </div>

    <!-- The Bootstrap Modal -->
    <div
      class="modal fade"
      id="myModal"
      tabindex="-1"
      aria-labelledby="exampleModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">
              What Can We Improve on Our Website?
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <textarea
              id="feedback"
              class="form-control"
              placeholder="Your feedback..."
            ></textarea>
            <input
              type="text"
              id="phoneNumber"
              class="form-control"
              placeholder="Your phone number..."
            />
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button id="submitFeedback" class="btn btn-primary">Submit</button>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
